@using RatioShop.Enums
@model IEnumerable<RatioShop.Data.Models.Address>

@{
    ViewData["Title"] = "AddressSettings";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
    var currentSortType = !string.IsNullOrEmpty(ViewBag.SortBy) ? ViewBag.SortBy.ToLower() : "default";
    var currentPage = ViewBag.Page;
}

<h1>Category Settings</h1>

<div style="display:inline-flex">
    <span style="margin-right:300px">
        <a asp-action="Create">Create New</a>
    </span>
    @* <span>
        <form asp-action="Index">
        <label for="sortBy">Sort By:</label>
        <select name="sortBy" id="sortBy">
        @foreach (SortingEnum item in Enum.GetValues(typeof(SortingEnum)))
        {
        var sortValue = item.ToString();
        if (sortValue.Equals(currentSortType, StringComparison.OrdinalIgnoreCase))
        {
        <option value="@sortValue" selected>@sortValue</option>
        }
        else
        {
        <option value="@sortValue">@sortValue</option>
        }
        }
        </select>
        <input type="hidden" name="page" value="@currentPage" />
        <input type="submit" value="Sort" />
        </form>
        </span>*@
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Address 1
            </th>
            <th>
                Address 2
            </th>
            <th>
                Address 3
            </th>
            <th>
                Address 4
            </th>
            <th>
                Address 5
            </th>

            <th>
                Created Date
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Address1)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Address2)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Address3)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address4)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address5)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
